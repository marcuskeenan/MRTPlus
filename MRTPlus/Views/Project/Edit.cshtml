@model MRTPlus.Models.Project

@{
    ViewBag.Title = "Edit";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Edit</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("List", "Index")
            </li>
            <li class="active">
                <strong>Edit</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
			@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary"})
        </div>
    </div>
</div>




<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Edit Project</h5>
                </div>
                <div class="ibox-content">

				@using (Html.BeginForm("Edit", "Project", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ProjectID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TEC, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TEC)
                @Html.ValidationMessageFor(model => model.TEC)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DivisionID, "DivisionID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DivisionID", String.Empty)
                @Html.ValidationMessageFor(model => model.DivisionID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BuildingID, "BuildingID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BuildingID", String.Empty)
                @Html.ValidationMessageFor(model => model.BuildingID)
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Justification, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Justification)
                @Html.ValidationMessageFor(model => model.Justification)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityTypeID, "ActivityTypeID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ActivityTypeID", String.Empty)
                @Html.ValidationMessageFor(model => model.ActivityTypeID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FundingTypeID, "FundingTypeID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FundingTypeID", String.Empty)
                @Html.ValidationMessageFor(model => model.FundingTypeID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost_K, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cost_K)
                @Html.ValidationMessageFor(model => model.Cost_K)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NeedTypeID, "NeedTypeID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NeedTypeID", String.Empty)
                @Html.ValidationMessageFor(model => model.NeedTypeID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BandRTypeID, "BandRTypeID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BandRTypeID", String.Empty)
                @Html.ValidationMessageFor(model => model.BandRTypeID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IFISectionTypeID, "IFISectionTypeID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IFISectionTypeID", String.Empty)
                @Html.ValidationMessageFor(model => model.IFISectionTypeID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DM, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DM)
                @Html.ValidationMessageFor(model => model.DM)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusTypeID, "StatusTypeID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StatusTypeID", String.Empty)
                @Html.ValidationMessageFor(model => model.StatusTypeID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CampusStrategyID, "CampusStrategyID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CampusStrategyID", String.Empty)
                @Html.ValidationMessageFor(model => model.CampusStrategyID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LOBCategoryID, "LOBCategoryID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LOBCategoryID", String.Empty)
                @Html.ValidationMessageFor(model => model.LOBCategoryID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LOBRating, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LOBRating)
                @Html.ValidationMessageFor(model => model.LOBRating)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShovelReady, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShovelReady)
                @Html.ValidationMessageFor(model => model.ShovelReady)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnrollmentDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnrollmentDate)
                @Html.ValidationMessageFor(model => model.EnrollmentDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BudgetYear, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BudgetYear)
                @Html.ValidationMessageFor(model => model.BudgetYear)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
				@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white"})
            </div>
        </div>

        @if (Model.Files.Any(f => f.FileType == FileType.Image))
        {
            <div class="form-group">
                <span class="control-label col-md-2"><strong>Current Image</strong></span>
                <div class="col-md-10">
                    <img src="~/File?id=@Model.Files.First(f => f.FileType == FileType.Image).FileId" alt="image" />
                </div>
            </div>
        }

        <div class="form-group">
            @Html.Label("Image", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="Image" name="upload" />
            </div>
        </div>
    </div>
}


                </div>
            </div>
        </div>
    </div>
 </div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
